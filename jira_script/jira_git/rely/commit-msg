#!/bin/bash
#
# An example hook script to check the commit log message.
# Called by "git commit" with one argument, the name of the file
# that has the commit message.  The hook should exit with non-zero
# status after issuing an appropriate message if it wants to stop the
# commit.  The hook is allowed to edit the commit message file.
#
# To enable this hook, rename this file to "commit-msg".

# Uncomment the below to add a Signed-off-by line to the message.
# Doing this in a hook is a bad idea in general, but the prepare-commit-msg
# hook is more suited to it.
#
# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\(.*>\).*$/Signed-off-by: \1/p')
# grep -qs "^$SOB" "$1" || echo "$SOB" >> "$1"

# This example catches duplicate Signed-off-by lines.

# git var GIT_AUTHOR_IDENT >> tmp.log   luobin <luobin@seasky.com> 1435908739 +0800
# git var GIT_AUTHOR_IDENT | sed -n 's/^\(.*>\).*$/Signed-off-by: \1/p' > tmp.log   Signed-off-by: luobin <luobin@seasky.com>

log=`cat $1`
key=`echo $log | awk '{print $1}'`
#branchname=`git branch | grep "*" | awk '{print $2}'`
user=`git var GIT_AUTHOR_IDENT | awk '{print $1}'`
if [ "$key" == "#" ];then
	exit 0
fi
if [ "$key" == "Merge" ];then
	exit 0
fi
#echo "log: $log key: $key user: $user"
v=`curl -u git:git -X GET -H "Content-Type: application/json" http://192.168.31.241:8080/rest/api/2/issue/$key`
state=`echo $v | ./jira_script/jira_git/rely/jq '.fields.status.id'`
name=`echo $v | ./jira_script/jira_git/rely/jq '.fields.assignee.name'`
#echo "-----------state: $state name : $name"
if [ $state == \"3\" ];then
	echo "JIRA issue state ok!!!!"
	if [ $name == \"$user\" ];then
		echo "JIRA Attn ok!!!!"
		exit 0 
	else
		echo "JIRA Attn error!!!!!"
		exit 1
	fi
else
	echo "Check jira key, (key_state:$state)!!!!" 1>&2
	exit 1
fi